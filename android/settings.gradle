pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }()

    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    resolutionStrategy {
        eachPlugin {
            if (requested.id.id == 'com.android.application') {
                useModule('com.android.tools.build:gradle:7.4.2') // Ensure this is compatible
            }
            if (requested.id.id == 'com.android.library') {
                useModule('com.android.tools.build:gradle:7.4.2') // Ensure this is compatible
            }
            if (requested.id.id == 'org.jetbrains.kotlin.android') {
                useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version") // Ensure this is compatible
            }
        }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version "7.3.0" apply false
    id("org.jetbrains.kotlin.android") version "1.9.10" 
}

include ":app"}
